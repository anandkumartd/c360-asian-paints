{"ast":null,"code":"var _jsxFileName = \"/Users/anandkumar/Documents/github/td-solution-engineering/c360-ap/src/Components/ProfileList.js\";\nimport React, { Component } from \"react\";\nimport ProfileCard from \"./ProfileCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchBar from \"material-ui-search-bar\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { searchProfiles } from \"../actions/searchProfilesActions\";\nimport { fetchAttributes } from \"../actions/attributeActions\";\nimport logo from \"./logo.svg\";\nimport Button from \"@material-ui/core/Button\";\n\nvar Treasure = require('td-js-sdk');\n\nvar td = new Treasure({\n  database: 'c360',\n  writeKey: '1199/a820ff5a25e36501cc8651472f667d80231611ef',\n  cdpHost: 'cdp-staging.in.treasuredata.com',\n  host: 'in-staging.treasuredata.com'\n});\n\nclass ProfileList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchProfiles: [],\n      results: [],\n      spacing: 3\n    };\n  }\n\n  fetchData(email) {\n    let currentComponent = this;\n\n    var successCallback = function (object) {\n      console.log('object' + JSON.stringify(object));\n      console.log(object[0].attributes);\n      var profiles = [];\n\n      if (object[0].values.length) {\n        profiles.push(object[0].attributes);\n        console.log('sprofiles:' + JSON.stringify(profiles));\n        var customerID = object[0].attributes.customer_id;\n        currentComponent.props.fetchAttributes(customerID);\n      }\n\n      currentComponent.setState({\n        results: profiles\n      });\n      console.log(profiles);\n    };\n\n    var errorCallback = function (err) {\n      console.log(err);\n    };\n\n    td.fetchUserSegments({\n      'audienceToken': 'cfe52bfb-9185-4b0c-8469-163939b07e39',\n      'version': '2',\n      keys: {\n        'email': email\n      }\n    }, successCallback, errorCallback);\n  }\n\n  render() {\n    const searchedProfiles = this.props.attributes; // const { error, loading, searchedProfiles } = this.props;\n    // if (error) {\n    // return <div>Error! {error.message}</div>;\n    // }\n    // if (loading) {\n    //   return <div>Loading...</div>;\n    // }\n\n    var search = React.createElement(SearchBar, {\n      style: {\n        marginBottom: '100px',\n        maxWidth: '650px',\n        margin: '0px auto'\n      },\n      value: this.state.value,\n      onChange: newValue => this.setState({\n        value: newValue\n      }),\n      onRequestSearch: () => this.fetchData(this.state.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n    console.log('searchresult:' + this.state.results);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'logo',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      style: {\n        width: '120px',\n        marginBottom: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, search, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        this.fetchData(this.state.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: this.state.spacing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.value !== '' ? React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      className: \"noshadow\",\n      style: {\n        marginTop: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.results.length !== 0 ? React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(ProfileCard, {\n      profile: this.props.attributes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })) : React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"No result Found! \")) : null))), this.state.value == null || this.state.value == '' ? React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      style: {\n        marginTop: '40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: this.state.spacing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.props.profiles.map((profile // [0, 1, 2].map(value =>,  key={value}\n    ) => //this.props.profiles.count\n    React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(ProfileCard, {\n      profile: profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))))))) : null); //return this.props.profiles.map(profile => (\n    // <ProfileCard profile={profile} />\n    // ));\n  }\n\n}\n\nProfileList.propTypes = {\n  searchProfiles: PropTypes.func.isRequired,\n  searchedProfiles: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  searchedProfiles: state.searchedProfiles.items,\n  loading: state.searchedProfiles.loading,\n  error: state.searchedProfiles.error,\n  attributes: state.attributes.item\n});\n\nconst mapActionsToProps = {\n  searchProfiles: searchProfiles,\n  fetchAttributes: fetchAttributes\n};\nexport default connect(mapStateToProps, mapActionsToProps)(ProfileList);","map":{"version":3,"sources":["/Users/anandkumar/Documents/github/td-solution-engineering/c360-ap/src/Components/ProfileList.js"],"names":["React","Component","ProfileCard","Grid","Paper","SearchBar","PropTypes","connect","searchProfiles","fetchAttributes","Button","Treasure","require","td","database","writeKey","cdpHost","host","ProfileList","constructor","props","state","results","spacing","fetchData","email","currentComponent","successCallback","object","console","log","JSON","stringify","attributes","profiles","values","length","push","customerID","customer_id","setState","errorCallback","err","fetchUserSegments","keys","render","searchedProfiles","search","marginBottom","maxWidth","margin","value","newValue","logo","width","marginTop","textAlign","map","profile","propTypes","func","isRequired","array","mapStateToProps","items","loading","error","item","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProfileCard from \"./ProfileCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SearchBar from \"material-ui-search-bar\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { searchProfiles } from \"../actions/searchProfilesActions\";\nimport{fetchAttributes} from \"../actions/attributeActions\";\nimport logo from './logo.svg';\nimport Button from \"@material-ui/core/Button\";\n\nvar Treasure = require('td-js-sdk')\nvar td = new Treasure({\n        database: 'c360',\n        writeKey: '1199/a820ff5a25e36501cc8651472f667d80231611ef',\n        cdpHost: 'cdp-staging.in.treasuredata.com',\n        host: 'in-staging.treasuredata.com'\n      });\n\nclass ProfileList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     searchProfiles:[], \n     results:[],\n      spacing: 3\n    };\n  }\n\n\n\n fetchData(email){\n  let currentComponent = this;\n\n    var successCallback = function (object) {\n      console.log('object'+ JSON.stringify(object));\n      console.log(object[0].attributes);\n      var profiles= [];\n     \n      if(object[0].values.length){\nprofiles.push(object[0].attributes); \nconsole.log('sprofiles:'+JSON.stringify(profiles));\nvar customerID =  object[0].attributes.customer_id;\ncurrentComponent.props.fetchAttributes(customerID);\n\n      }\n      currentComponent.setState({results:profiles});\nconsole.log(profiles); \n        };\n       \n     \n      var errorCallback = function(err) {\n            console.log(err);\n          };\n          td.fetchUserSegments({\n            'audienceToken': 'cfe52bfb-9185-4b0c-8469-163939b07e39',\n                  'version': '2',\n                  keys: {\n                    'email': email\n                    }\n          }, successCallback, errorCallback)\n            \n        }\n  \n   \n        \n\n  render() {\n  const searchedProfiles = this.props.attributes;\n\n    // const { error, loading, searchedProfiles } = this.props;\n    // if (error) {\n      // return <div>Error! {error.message}</div>;\n    // }\n    // if (loading) {\n    //   return <div>Loading...</div>;\n    // }\nvar search = <SearchBar\nstyle={{ marginBottom: '100px', maxWidth: '650px', margin:'0px auto' }}\nvalue={this.state.value}\nonChange={newValue => this.setState({ value: newValue })}\nonRequestSearch={() => this.fetchData(this.state.value)}\n/>;\nconsole.log('searchresult:'+this.state.results);\n\n    return (\n      <div>\n      <p className={'logo'}><img src={logo} alt=\"Logo\" style={{width:'120px', marginBottom:'20px'}}/></p>\n      <div className={\"searchbar\"}>\n        {search}\n        <Button\nvariant=\"contained\"\ncolor=\"primary\"\nonClick={() => {\nthis.fetchData(this.state.value);\n}}\n>\nSearch\n</Button></div>\n\n\n        <Grid container spacing={2}>\n          <Grid item style={{width:\"100%\"}}>\n            <Grid container justify=\"center\" spacing={this.state.spacing}>\n              {/*  this.props.profiles.map( }\n              {searchedProfiles.map((\n               // profile // [0, 1, 2].map(value =>,  key={value}\n              //  ) => (**/}\n\n                { this.state.value !== '' ? \n  \n                <Grid item xs={3} className={\"noshadow\"} style={{marginTop:'50px'}} >\n                    \n        { this.state.results.length !== 0 ?\n                  <Paper> \n                    <ProfileCard profile={this.props.attributes} />\n                  </Paper>\n     : <p style={{textAlign:'center'}}>No result Found! </p>\n    }\n                </Grid>\n             \n                : null }\n    \n            </Grid>\n          </Grid>\n        </Grid>\n\n        { this.state.value == null || this.state.value == '' ? \n        <Grid container spacing={4} style={{marginTop:'40px'}}>\n        <Grid item>\n          <Grid container justify=\"center\" spacing={this.state.spacing}>\n            {this.props.profiles.map((\n              profile // [0, 1, 2].map(value =>,  key={value}\n            ) => (\n              //this.props.profiles.count\n              <Grid item xs={3}>\n                <Paper>\n                  <ProfileCard profile={profile} />\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n: null }\n     \n      </div>\n\n    );\n    //return this.props.profiles.map(profile => (\n    // <ProfileCard profile={profile} />\n    // ));\n  }\n}\n\nProfileList.propTypes = {\n  searchProfiles: PropTypes.func.isRequired,\n  searchedProfiles: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  searchedProfiles: state.searchedProfiles.items,\n  loading: state.searchedProfiles.loading,\n  error: state.searchedProfiles.error,\n  attributes: state.attributes.item\n});\n\nconst mapActionsToProps = {\n  searchProfiles: searchProfiles,\n  fetchAttributes: fetchAttributes\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(ProfileList);\n"]},"metadata":{},"sourceType":"module"}